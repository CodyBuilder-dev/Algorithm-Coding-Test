//제목 : 테트로미노
//목적 : 테트리미노 만든 후, 테트리미노를 얹어 그 테트리미노 안의 값을 더해서 최대값
/*조건 : 
1.대칭, 회전해서 같은 테트리미노는 같은 것으로 본다.
2.보드의 크기는 최대 500x500 = 25*10^4
3.한칸의 수는 최대 1000이므로 합의 범위는 4000
*/

/*아이디어 : 대칭해서 만든 놈도 따로 구현하는게 맞다.
1. 테트리미노가 7가지이므로 7*4가지에 대해 모든놈을 만든다.
2. 만든 후 얹어보면서 수행. 즉 7*4*500*500 = 대충 690만개 -> 다 따져보기 가능
-> 결국 테트로미노 어떻게 구현하느냐가 핵심
*/

/*구현1 : 테트리미노의 하드코딩 구현
1. 구조체로다가 만들기
2. 구조체 내에 4개 변수로 4개의 정보 저장
3. 4개의 변수는 각각 테트리미노의 왼쪽 위로부터 떨어져있는 좌표
(네모의 경우 +0+0 +0+1 +1+0 +1+1, 직사각형의 경우 +0+0 +0+1 +0+2 +0+3
4. 구조체에 28가지 경우의 수 저장 -> 완전 노가다?! -> 하드코딩 안하는 방법 나중에 알아보기
(DFS로 된다는데 어떨까...
*/
#include <iostream>
#include <utility>

using namespace std;

typedef struct {
	pair<int, int> blk0;
	pair<int, int> blk1;
	pair<int, int> blk2;
	pair<int, int> blk3;
}BLOCK;
int main()
{
	BLOCK blockset[28];
	blockset[0].blk0 = 
}