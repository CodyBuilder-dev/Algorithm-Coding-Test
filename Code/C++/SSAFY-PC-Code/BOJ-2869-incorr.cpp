//제목 : 달팽이는 올라가고 싶다.
//목적 : 단순 정수 합? 노노, 중간에 함정들이 섞여있음
//V의 크기가 10억까지 커지므로, 자료형 선정에 있어 신경써야 함
//아이디어 1 : 낮 밤을 나누어 무한반복
//얼마나 돌릴지 모르므로 while문
//낮에 상승 -> 도달 체크 -> 밤에 하락

//아이디어 2 : 수학적으로 존나 간지나게 풀기
//A B V일때 A*N < V, A*N+1 >V인 값을 구한다. 즉 안 미끄러지고 올라가도 N일은 걸린다.
//이때부터 따져보면 크기를 훨씬 줄일 수 있다.

//한번에 올라갈 수 있는 높이는 A이다. 
//즉 거꾸로 따져보면 V-A가 되지 않는 한 추락한다.
//즉, V-A가 되기 전 까지는 그냥 A-B씩 올라가면 된다.
//즉 N*(A-B)일 까지 올라가면 된다.

//이제 케이스 판단.
//V>>>A,B
//A>>>V,B

//문제점 : 내 방식은 N일부터 일자를 거슬러 올라가는 방식
//이대로 내면 시간초과
#include <iostream>

using namespace std;

int main()
{
	long A, B, V;
	long height = 0,N;

	cin >> A >> B >> V;
	N = V / A;
	if (N == 0) cout << 1;
	else
	{
		height = N * (A - B);
		
		while (1)
		{
			N++;
			height += A;
			if (height < V)
			{
				height -= B;
			}
			else break;
		}
		cout << N;
	}
}