"""
제목 : 줄 서는 방법

아이디어 : 전체 경우의 수 생성 후 완전 탐색
-> 20!은 2.4*10^19에 달하는 수이다. 절대 경우의 수를 전부 생성할 수 없다

아이디어 : k의 범위를 보고 맨 앞자리에 나올 수를 판단한다
- n개로 만들수 있는 조합은 아래와 같이 분해할 수잇다
    - 1로 시작하는 조합 (n-1)!개
    - 2로 시작하는 조합 (n-1)!개
    - ...
    - n으로 시작하는 조합 (n-1)!개
    -> 즉, k를 (n-1)!로 나누었을 때 몫이 얼마냐에 따라 k의 맨 앞자리가 무엇인지 알 수 있다
- 위의 과정을 재귀적으로 반복한다

예시) k = 5 n =3
    - k -= 1 = 4

    - k / 2!의 (몫,나머지) = 2,0
    - 따라서 맨 앞자리가 [1,2,3][2] = 3

    - k / 1!의 (몫,나머지) = 0,0
    - 따라서 맨 앞자리가 [1,2][0] = 1

    - k / 0!의 (몫,나머지) = 0,0
    - 따라서 맨 앞자리가 [2][0] = 2

예시) k = 4 n = 3
    - k -= 1 = 3

    - k / 2!의 (몫,나머지) = 1,1
    - 따라서 맨 앞자리가 [1,2,3][1] = 2

    - k / 1!의 (몫,나머지) = 1,0
    - 따라서 맨 앞자리가 [1,3][1] = 3

    - k / 0!의 (몫,나머지) = 0,0
    - 따라서 맨 앞자리가 [1][0] = 1
"""
def solution(n, k):
    factos = [1]*(n+1)
    people = list(range(1,n+1))

    for i in range(2,n+1):
        factos[i] = i*factos[i-1]

    def recur(people, n, k):
        if not n:
            return []
        curr = people[k // factos[n-1]]
        people.remove(curr)
        return [curr] + recur(people,n-1, k % factos[n-1])

    answer = recur(people,n,k-1)
    return  answer

print(solution(3,5))
print(solution(3,4))